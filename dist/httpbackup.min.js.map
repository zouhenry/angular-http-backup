{"version":3,"sources":["webpack:///httpbackup.min.js","webpack:///webpack/bootstrap bf1f87615372e2d60dae?4e50","webpack:///./src/httpbackup.module.js?25e6","webpack:///./src/httpbackup.interceptor.js?e37f"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_httpbackup","_httpbackup2","angular","factory","HttpBackupInterceptor","$q","response","window","localStorage","setItem","config","url","JSON","stringify","responseError","data","getItem","reject","parse","console","warn","resolve","ex","$inject","Object","defineProperty","value"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GE5ChC,YAMA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAIvF,GAAAG,GAAAf,EAAA,GANIgB,EAAeL,EAAuBI,EAQ1CE,SAAQb,OAAQ,iBACbc,QAAS,wBADZF,eFsDM,SAASZ,EAAQD,GGlEvB,YAOA,SAASgB,GAAuBC,GAO9B,QAASC,GAAUA,GAGjB,MADAC,QAAOC,aAAaC,QAASH,EAASI,OAAOC,IAAKC,KAAKC,UAAWP,IAC3DA,EAGT,QAASQ,GAAeR,GACtB,GAAIS,GAAOR,OAAOC,aAAaQ,QAASV,EAASI,OAAOC,IACxD,KAAKI,EAUH,MAAOV,GAAGY,OAAQX,EATlB,KAIE,MAFAS,GAAOH,KAAKM,MAAOH,GACnBI,QAAQC,KAAM,uBAAwBd,EAASI,OAAOC,KAC/CN,EAAGgB,QAASN,GACnB,MAAQO,GACR,MAAOjB,GAAGY,OAAQX,IApBxB,OACEA,SAAeA,EACfQ,cAAeA,GH2DlBV,EAAsBmB,SAAW,MGpElCC,OAAOC,eAAerC,EAAS,cAC7BsC,OAAO,IAMTtC,aALegB","file":"httpbackup.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _httpbackup = __webpack_require__(1);\n\t\n\tvar _httpbackup2 = _interopRequireDefault(_httpbackup);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module('httpbackup', []).factory('HttpBackupInterceptor', _httpbackup2.default); /**\n\t                                                                                          * Created by Henry Zou on 10/7/2016.\n\t                                                                                          *\n\t                                                                                          *\n\t                                                                                          * USAGE:\n\t                                                                                          * In the config block, register the Interceptor\n\t                                                                                          * $httpProvider.interceptors.push( 'HttpBackupInterceptor' );\n\t                                                                                          *\n\t                                                                                          */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tHttpBackupInterceptor.$inject = [\"$q\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Saves previously successful ajax requests in localStorage and replays them back when there’s server response fails/network error\n\t */\n\t\n\texports.default = HttpBackupInterceptor;\n\t\n\t/* @ngInject */\n\t\n\tfunction HttpBackupInterceptor($q) {\n\t\n\t  return {\n\t    response: response,\n\t    responseError: responseError\n\t  };\n\t\n\t  function response(response) {\n\t    // for every successful request, cache the response\n\t    window.localStorage.setItem(response.config.url, JSON.stringify(response));\n\t    return response;\n\t  }\n\t\n\t  function responseError(response) {\n\t    var data = window.localStorage.getItem(response.config.url);\n\t    if (data) {\n\t      //if response fails and there's cached data\n\t      try {\n\t        // use cached data\n\t        data = JSON.parse(data);\n\t        console.warn('using offline cache:', response.config.url);\n\t        return $q.resolve(data);\n\t      } catch (ex) {\n\t        return $q.reject(response);\n\t      }\n\t    } else {\n\t      return $q.reject(response);\n\t    }\n\t  }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** httpbackup.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bf1f87615372e2d60dae\n **/","/**\n * Created by Henry Zou on 10/7/2016.\n *\n *\n * USAGE:\n * In the config block, register the Interceptor\n * $httpProvider.interceptors.push( 'HttpBackupInterceptor' );\n *\n */\n\nimport httpbackupInterceptor from './httpbackup.interceptor';\n\nangular.module( 'httpbackup', [] )\n  .factory( 'HttpBackupInterceptor', httpbackupInterceptor );\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/httpbackup.module.js\n **/","/**\n * Saves previously successful ajax requests in localStorage and replays them back when there’s server response fails/network error\n */\n\nexport default HttpBackupInterceptor;\n\n/* @ngInject */\nfunction HttpBackupInterceptor( $q ) {\n\n  return {\n    response     : response,\n    responseError: responseError\n  };\n\n  function response( response ) {\n    // for every successful request, cache the response\n    window.localStorage.setItem( response.config.url, JSON.stringify( response ) );\n    return response;\n  }\n\n  function responseError( response ) {\n    var data = window.localStorage.getItem( response.config.url );\n    if ( data ) { //if response fails and there's cached data\n      try {\n        // use cached data\n        data = JSON.parse( data );\n        console.warn( 'using offline cache:', response.config.url );\n        return $q.resolve( data );\n      } catch ( ex ) {\n        return $q.reject( response );\n      }\n    } else {\n      return $q.reject( response );\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/httpbackup.interceptor.js\n **/"],"sourceRoot":""}